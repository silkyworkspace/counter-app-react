# ワークフローの名前（GitHub上のActionsタブで表示される名前）
name: Deploy Counter App to GitHub Pages

# このワークフローがいつ実行されるかを定義
on:
  push:
    branches: [ main ]  # mainブランチにプッシュされた時に自動実行
  workflow_dispatch:    # GitHub上から手動でワークフローを実行可能にする

# GitHub Pagesへのデプロイに必要な権限を設定
permissions:
  contents: read        # リポジトリの内容を読み取る権限
  pages: write          # GitHub Pagesに書き込む権限
  id-token: write       # OpenID Connect トークンを書き込む権限（セキュリティ強化）

# 同時実行制御（複数のデプロイが同時に走らないようにする）
concurrency:
  group: "pages"                    # 同じグループ名のワークフローは同時実行しない
  cancel-in-progress: false        # 実行中のワークフローをキャンセルしない

# 実際の処理を定義（ジョブ）
jobs:
  # ビルドジョブ：アプリをビルドしてアーティファクトを作成
  build:
    runs-on: ubuntu-latest          # Ubuntu環境で実行
    
    steps:
    # ステップ1: リポジトリのソースコードをワーカーにダウンロード
    - name: Checkout repository
      uses: actions/checkout@v4     # GitHubが提供する公式アクション
      
    # ステップ2: Node.js環境をセットアップ
    - name: Setup Node.js
      uses: actions/setup-node@v4   # Node.js環境構築の公式アクション
      with:
        node-version: '18'          # Node.js バージョン18を使用
        cache: 'npm'                # npmキャッシュを有効化（次回実行時の高速化）
        
    # ステップ3: package.jsonの依存関係をインストール
    - name: Install dependencies
      run: npm ci                   # npm installより高速で確実（package-lock.jsonを厳密に使用）
      
    # ステップ4: Reactアプリをプロダクション用にビルド
    - name: Build with Vite
      run: npm run build            # package.jsonの"build"スクリプトを実行
      env:
        CI: true                    # 継続的インテグレーション環境であることを明示
        
    # ステップ5: GitHub Pages用の設定を構成
    - name: Setup Pages
      uses: actions/configure-pages@v4  # GitHub Pages設定の公式アクション
      
    # ステップ6: ビルドされたファイルをGitHub Actionsのアーティファクトとしてアップロード
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3  # Pages用アーティファクトアップロードの公式アクション
      with:
        path: ./dist                # Viteのビルド出力ディレクトリ（distフォルダ）
        
  # デプロイジョブ：ビルドされたアーティファクトをGitHub Pagesに公開
  deploy:
    environment:
      name: github-pages            # デプロイ環境名
      url: ${{ steps.deployment.outputs.page_url }}  # デプロイ後のサイトURL
    runs-on: ubuntu-latest          # Ubuntu環境で実行
    needs: build                    # buildジョブが成功した後に実行
    
    steps:
    # GitHub Pagesに実際にデプロイを実行
    - name: Deploy to GitHub Pages
      id: deployment                # 後でこのステップの結果を参照するためのID
      uses: actions/deploy-pages@v4 # GitHub Pages デプロイの公式アクション